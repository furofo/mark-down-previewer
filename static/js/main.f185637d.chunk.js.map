{"version":3,"sources":["index.js"],"names":["marked","setOptions","breaks","MarkDownContainer","props","state","input","previewSwitch","editorSwitch","updateMessage","bind","previewExpand","editorExpand","event","console","log","target","value","this","setState","$","hide","show","animate","width","rows","css","document","getElementById","innerHTML","click","className","id","href","onChange","React","Component","ReactDom","render"],"mappings":"2RAOAA,IAAOC,WAAW,CACdC,QAAQ,IAEZ,IA+CMC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,MApDO,8qCAqDPC,eAAe,EACfC,cAAc,GAElB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAVL,E,0DAcLG,GACVC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBC,KAAKC,SAAS,CACVb,MAAOO,EAAMG,OAAOC,U,sCAOrBC,KAAKb,MAAME,eACVa,IAAE,qBAAqBC,KAAK,QAAQ,eACpCH,KAAKC,SAAS,CACVZ,eAAe,MAKnBa,IAAE,qBAAqBE,KAAK,QAAQ,eACpCJ,KAAKC,SAAS,CACVZ,eAAe,O,qCAKpBW,KAAKb,MAAMG,cACVY,IAAE,sBAAsBC,KAAK,QAAQ,eACrCD,IAAE,qBAAqBG,QAAQ,CAC3BC,MAAO,OACR,KAEHN,KAAKC,SAAS,CACVX,cAAc,IAGlBY,IAAE,WAAWG,QAAQ,CACjBE,KAAM,MACP,OAIHL,IAAE,sBAAsBE,KAAK,QAAQ,WAAWF,IAAE,qBAAqBM,IAAI,QAAS,UACpFN,IAAE,qBAAqBG,QAAQ,CAC3BC,MAAO,OACR,KAEHJ,IAAE,WAAWG,QAAQ,CACjBE,KAAM,MACP,KACHP,KAAKC,SAAS,CACVX,cAAc,O,0CAKtBmB,SAASC,eAAe,WAAWC,UAAY7B,IAAOkB,KAAKb,MAAMC,OACjEQ,QAAQC,IAAI,gBAIZK,IAAE,qBAAqBU,MAAMZ,KAAKP,eAElCS,IAAE,oBAAoBU,MAAMZ,KAAKN,gB,2CAOjCe,SAASC,eAAe,WAAWC,UAAY7B,IAAOkB,KAAKb,MAAMC,S,+BAGjE,OACA,6BACA,yBAAKyB,UAAY,UACb,yBAAKA,UAAY,oBACb,yBAAKC,GAAK,kBAEV,uBAAGD,UAAU,eAAb,YACF,uBAAGE,KAAM,IAAID,GAAK,mBAAlB,KAAsC,uBAAGD,UAAU,sBAAnD,MAKE,8BAAUG,SAAYhB,KAAKT,cAAeuB,GAAK,SAASP,KAAO,MAC1DP,KAAKb,MAAMC,SAIxB,yBAAKyB,UAAY,qBACjB,yBAAKA,UAAY,UACjB,yBAAKC,GAAK,kBAEF,uBAAGD,UAAU,eAAb,aACA,uBAAGE,KAAO,IAAID,GAAK,oBAAmB,uBAAGD,UAAU,yBAK3D,yBAAKA,UAAY,UACb,yBAAKC,GAAK,mB,GAnHUG,IAAMC,WA6HtCC,IAASC,OAAO,kBAACnC,EAAD,MAAuBwB,SAASC,eAAe,U","file":"static/js/main.f185637d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './style.css';\r\nimport $ from \"jquery\";\r\nimport marked from 'marked';\r\n\r\n\r\nmarked.setOptions({\r\n    breaks: true\r\n});\r\nlet placeholderText =  `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nclass MarkDownContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: placeholderText,\r\n            previewSwitch: true,\r\n            editorSwitch: true,\r\n        }\r\n        this.updateMessage = this.updateMessage.bind(this);\r\n        this.previewExpand = this.previewExpand.bind(this);\r\n        this.editorExpand = this.editorExpand.bind(this);\r\n\r\n    }\r\n\r\n    updateMessage(event) {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            input: event.target.value\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    previewExpand(){\r\n        if(this.state.previewSwitch){\r\n            $(\".editor-container\").hide(\"slow\", function(){});\r\n            this.setState({\r\n                previewSwitch: false\r\n            })\r\n        }\r\n\r\n        else {\r\n            $(\".editor-container\").show(\"slow\", function(){});\r\n            this.setState({\r\n                previewSwitch: true\r\n            })\r\n        }\r\n    }\r\n    editorExpand(){\r\n        if(this.state.editorSwitch){\r\n            $(\".preview-container\").hide(\"slow\", function(){});\r\n            $(\".editor-container\").animate({\r\n                width: \"80%\",\r\n            }, 1000);\r\n            \r\n            this.setState({\r\n                editorSwitch: false\r\n            })\r\n            //$(\"#editor\").attr(\"rows\", \"40\");\r\n            $(\"#editor\").animate({\r\n                rows: \"40\"\r\n            }, 1000);\r\n        }\r\n\r\n        else {\r\n            $(\".preview-container\").show(\"slow\", function(){$(\".editor-container\").css(\"width\", \"70%\");});\r\n            $(\".editor-container\").animate({\r\n                width: \"70%\",\r\n            }, 1000);\r\n            //$(\"#editor\").attr(\"rows\", \"15\");\r\n            $(\"#editor\").animate({\r\n                rows: \"15\"\r\n            }, 1000);\r\n            this.setState({\r\n                editorSwitch: true\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.getElementById('preview').innerHTML = marked(this.state.input);\r\n        console.log(\"what is this\");\r\n       \r\n        \r\n        \r\n        $(\"#preview-expander\").click(this.previewExpand);\r\n       \r\n        $(\"#editor-expander\").click(this.editorExpand);\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        document.getElementById('preview').innerHTML = marked(this.state.input);\r\n    }\r\n    render() {\r\n        return(\r\n        <div>\r\n        <div className = \"center\">\r\n            <div className = \"editor-container\">\r\n                <div id = \"editor-heading\"> \r\n                \r\n                <i className=\"fas fa-fire\">  Editor</i>\r\n              <a href =\"#\" id = \"editor-expander\">  <i className=\"fas fa-arrows-alt\"></i> </a>\r\n                \r\n                </div>\r\n            \r\n            \r\n                <textarea onChange = {this.updateMessage} id = \"editor\" rows = \"15\">\r\n                    {this.state.input}\r\n                </textarea>\r\n            </div>\r\n        </div>\r\n        <div className = \"preview-container\">\r\n        <div className = \"center\">\r\n        <div id = \"preview-header\"> \r\n                \r\n                <i className=\"fas fa-fire\">  Preview</i>\r\n                <a href = \"#\" id = \"preview-expander\"><i className=\"fas fa-arrows-alt\"></i></a>\r\n                \r\n                </div>\r\n            \r\n        </div>\r\n        <div className = \"center\">\r\n            <div id = \"preview\">\r\n            </div>\r\n       </div>\r\n       </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nReactDom.render(<MarkDownContainer />, document.getElementById('root'));"],"sourceRoot":""}